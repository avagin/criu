#!/bin/bash
set -x
python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFD, 0)"
start=`date +%s`

fini()
{
	dmesg
	date

	if [ -f /proc/lockdep ]; then
		# net-next: WARNING: CPU: 0 PID: 1544 at net/ipv4/tcp_input.c:889
		dmesg | grep -v "can't dereference iret registers at.*entry_SYSCALL_64_fastpath" | grep WARNING && exit 1 || true
	fi

	cat /proc/sys/kernel/tainted
	[ "`cat /proc/sys/kernel/tainted`" = "0" ] ||	exit 1

	exit 0
}

check_travis_timeout()
{
    local cur

    cur=`date +%s`

    echo elapsed time: $((cur - start))
#    test $((cur - start)) -lt $((40 * 60)) || fini
    [ "`cat /proc/sys/kernel/tainted`" = "0" ] || fini
    if [ -f /proc/lockdep ]; then
	dmesg | grep WARNING && fini || true
    fi
}

cd ../../
set -m
./scripts/travis/kexec.sh prep > kexec-prep.log 2>&1 &

set -x -e

python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFD, 0)"

cat /proc/cmdline
cat /proc/self/mountinfo

TRAVIS_PKGS="protobuf-c-compiler libprotobuf-c0-dev libaio-dev
		libprotobuf-dev protobuf-compiler python-ipaddr libcap-dev
		libnl-3-dev gcc-multilib libc6-dev-i386 gdb bash python-protobuf
		libnet-dev util-linux asciidoc xmlto libnl-route-3-dev
		kexec-tools libssl-dev libelf-dev strace ccache"

travis_prep () {
	[ -n "$SKIP_TRAVIS_PREP" ] && return

	service apport stop

	CC=gcc
	# clang support
	if [ "$CLANG" = "1" ]; then
		TRAVIS_PKGS="$TRAVIS_PKGS clang"
		CC=clang
	fi

	# ccache support, only enable for non-GCOV case
	if [ "$CCACHE" = "1" -a -z "$GCOV" ]; then
		# ccache is installed by default, need to set it up
		export CCACHE_DIR=$HOME/.ccache
		mkdir -p $CCACHE_DIR
		[ "$CC" = "clang" ] && export CCACHE_CPP2=yes
		# uncomment the following to get detailed ccache logs
		#export CCACHE_LOGFILE=$HOME/ccache.log
		CC="ccache $CC"
	fi

	apt-get update -qq
	apt-get install -qq --no-install-recommends $TRAVIS_PKGS
	chmod a+x $HOME
	pip install dropbox
	export CCACHE_DIR="/home/travis/.ccache"
	export CC="ccache gcc"
	export CXX="ccache g++"
	export PATH="/usr/lib/ccache:$PATH"
}

travis_prep

export GCOV
umask 0000
make -j4 ${MAKE_VARS}
ccache -s

./criu/criu check --extra --all || echo $?
make -j4 ${MAKE_VARS} -C test/zdtm
python test/zdtm.py run -t zdtm/static/env00

date
wait # for kexec.sh prep to finish
cat kexec-prep.log
./scripts/travis/kexec.sh

dmesg

ulimit -c unlimited
echo "|`pwd`/test/abrt.sh %P %p %s %e" > /proc/sys/kernel/core_pattern
make -j4 ${MAKE_VARS} -C test/zdtm

check_travis_timeout

umask 0000
./criu/criu check
./criu/criu check --all || echo $?
./criu/criu cpuinfo dump
./criu/criu cpuinfo check

export SKIP_PREP=1

chmod a+w -R .
chmod 0777 test/
chmod 0777 test/zdtm/static
chmod 0777 test/zdtm/transition

check_travis_timeout
./test/zdtm.py run -a -p 4 --keep-going

check_travis_timeout
bash ./test/jenkins/criu-fault.sh

check_travis_timeout
bash ./test/jenkins/criu-fcg.sh
check_travis_timeout
bash ./test/jenkins/criu-inhfd.sh

check_travis_timeout
make -C test/others/mnt-ext-dev/ run
#make -C test/others/exec/ run
make -C test/others/make/ run

check_travis_timeout
./test/zdtm.py run -t zdtm/static/env00 --sibling

check_travis_timeout
./test/zdtm.py run -t zdtm/transition/maps007 --pre 2 --dedup

check_travis_timeout
./test/zdtm.py run -t zdtm/transition/maps007 --pre 2 --noauto-dedup

check_travis_timeout
./test/zdtm.py run -t zdtm/transition/maps007 --pre 2 --page-server

check_travis_timeout
./test/zdtm.py run -t zdtm/transition/maps007 --pre 2 --page-server --dedup

check_travis_timeout
./test/zdtm.py run -t zdtm/static/socket-tcp-local --norst

check_travis_timeout
ip net add test
./test/zdtm.py run -t zdtm/static/env00 -f h --join-ns

check_travis_timeout
# RPC testing
./test/zdtm.py run -t zdtm/static/env00 --rpc		# Basic
./test/zdtm.py run -t zdtm/static/env00 --rpc --pre 2 --page-server
./test/zdtm.py run -t zdtm/static/ptrace_sig -f h --rpc # Error handling (crfail test)

./test/zdtm.py run --empty-ns -T zdtm/static/socket-tcp*-local --iter 2

check_travis_timeout
./test/zdtm.py run --empty-ns -T zdtm/static/socket-tcp*-local --iter 2

check_travis_timeout
./test/zdtm.py run -p 2 -T zdtm/static/maps* --lazy-pages
./test/zdtm.py run -t zdtm/static/env00 --lazy-pages --pre 2
./test/zdtm.py run -t zdtm/static/env00 --remote-lazy-pages

check_travis_timeout
git clean -dxf test/zdtm
make COMPAT_TEST=y -C test/zdtm/static/ env00
./test/zdtm.py run -t zdtm/static/env00 -f h

dmesg

if [ -f /proc/lockdep ]; then
	cat /proc/lockdep | grep WARNING && exit 1 || true
fi

cat /proc/sys/kernel/tainted
[ "`cat /proc/sys/kernel/tainted`" = "0" ] ||	exit 1

#check_travis_timeout
#pip install flake8
#make lint
#
## Check that help output fits into 80 columns
#WIDTH=$(./criu/criu --help | wc --max-line-length)
#if [ "$WIDTH" -gt 80 ]; then
#	echo "criu --help output does not obey 80 characters line width!"
#	exit 1
#fi
